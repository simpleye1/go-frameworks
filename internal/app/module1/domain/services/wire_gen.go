// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package services

import (
	"github.com/google/wire"
	"test/internal/app/module1/infrastructure"
	"test/internal/app/module1/infrastructure/repos"
	"test/internal/pkg"
	"test/internal/pkg/config"
	"test/internal/pkg/database"
	"test/internal/pkg/log"
)

// Injectors from wire.go:

func CreateUserDetailService(cf string) (UserDetailService, error) {
	viper, err := config.New(cf)
	if err != nil {
		return nil, err
	}
	options, err := log.NewOptions(viper)
	if err != nil {
		return nil, err
	}
	logger, err := log.New(options)
	if err != nil {
		return nil, err
	}
	databaseOptions, err := database.NewOptions(viper, logger)
	if err != nil {
		return nil, err
	}
	db, err := database.New(databaseOptions, logger)
	if err != nil {
		return nil, err
	}
	detailRepository := repos.NewPostgresDetailsRepository(logger, db)
	userRepository := repos.NewPostgresUserRepository(logger, db)
	userDetailService := NewUserDetailServiceImpl(logger, detailRepository, userRepository)
	return userDetailService, nil
}

// wire.go:

var testProviderSet = wire.NewSet(
	ProviderSet, infrastructure.ProviderSet, pkg.ProviderSet,
)
