// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	clients "test/internal/app/github/domain/clients"

	mock "github.com/stretchr/testify/mock"
)

// GithubService is an autogenerated mock type for the GithubService type
type GithubService struct {
	mock.Mock
}

// GetRepoAllCommits provides a mock function with given fields: owner, repo, sha, page
func (_m *GithubService) GetRepoAllCommits(owner string, repo string, sha string, page int) ([]*clients.RepoCommit, error) {
	ret := _m.Called(owner, repo, sha, page)

	var r0 []*clients.RepoCommit
	if rf, ok := ret.Get(0).(func(string, string, string, int) []*clients.RepoCommit); ok {
		r0 = rf(owner, repo, sha, page)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*clients.RepoCommit)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string, string, int) error); ok {
		r1 = rf(owner, repo, sha, page)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
